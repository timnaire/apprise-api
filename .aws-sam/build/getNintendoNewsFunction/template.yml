# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Start from scratch starter project

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform: AWS::Serverless-2016-10-31

# Shared configuration for all resources, more in
# https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    # The PermissionsBoundary allows users to safely develop with their function's permissions constrained
    # to their current application. All the functions and roles in this application have to include it and
    # it has to be manually updated when you add resources to your application.
    # More information in https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html
    PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${AppId}-${AWS::Region}-PermissionsBoundary'

Parameters:
  AppId:
    Type: String

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Name: apprise-api
  
  getPcGamesNewsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "getPcGamesNewsFunction"
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 60
      Handler: src/handlers/pc-games.getPcGamesNewsHandler
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /get/pcgames/news
            Method: get
            RestApiId:
              Ref: ApiGatewayApi

  getNintendoNewsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "getNintendoNewsFunction"
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 60
      Handler: src/handlers/nintendo.getNintendoNewsHandler
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /get/nintendo/news
            Method: get
            RestApiId:
              Ref: ApiGatewayApi
      

  getPlaystationNewsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "getPlaystationNewsFunction"
      Runtime: nodejs10.x
      Timeout: 60
      Handler: src/handlers/playstation.getPlaystationNewsHandler
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /get/playstation/news
            Method: get
            RestApiId:
              Ref: ApiGatewayApi

  getXboxNewsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "getXboxNewsFunction"
      Runtime: nodejs10.x
      Timeout: 60
      Handler: src/handlers/xbox.getXboxNewsHandler
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /get/xbox/news
            Method: get
            RestApiId:
              Ref: ApiGatewayApi
